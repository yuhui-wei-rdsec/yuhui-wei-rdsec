trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: AzureImageBuilderTask@1
  inputs:
    managedIdentity: '/subscriptions/3d2f60c1-6e10-4a60-8a22-93c71fbd143b/resourcegroups/wei-test-image-build/providers/Microsoft.ManagedIdentity/userAssignedIdentities/weiImage-ManagedIdentity'
    imageSource: 'sig'
    ImageVersionId: '0.2023.0310191729'
    provisioner: 'powershell'
    windowsUpdateProvisioner: true
    packagePath: '$(System.DefaultWorkingDirectory)'
    inlineScript: |
      # Install Chocolatey (if it's not already installed)
        if (-not (Get-Command choco.exe -ErrorAction SilentlyContinue)) {
          Set-ExecutionPolicy Bypass -Scope Process -Force;
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        }
      
        # Install a package using Chocolatey
        choco install -y powerautomatedesktop
        choco install -y powerbi
    storageAccountName: 'weistimagebuild'
    distributeType: 'sig'
    galleryImageId: '/subscriptions/3d2f60c1-6e10-4a60-8a22-93c71fbd143b/resourceGroups/wei-test-image-build/providers/Microsoft.Compute/galleries/RDSec_SDZ_Stage/images/windows-10-Common'
    replicationRegions: 'westus2'
    ibSubscription: 'RDsec-SDZ-StageEnv(3d2f60c1-6e10-4a60-8a22-93c71fbd143b)'
    ibAzureResourceGroup: 'wei-test-image-build'
    ibLocation: 'westus2'
    vmSize: 'Standard_D4s_v4'
    buildTimeoutInMinutes: '180'